// DFST
// Template code for a depth-first search algorithm beginning at the vertex Ans
// Tracks the predecessor of each vertex
// Returns [insert return here] in O(VE + V * [insert visit complexity here]))

{abs(iPart(real(Ans→θGT
V→dim(ʟθGT2:⁻1→Z
// Establish additional structures here
While dim(ʟθGT
  ʟθGT(dim(ʟθGT→Y
  Z→ʟθGT2(Ans:Y
  prgmθGTVS
  If dim(Ans:Then
    Ans→θGT1:1→θ
    While θ≤dim(ʟθGT1
      ʟθGT1(θ
      If not(ʟθGT2(Ans:Then
        Ans→ʟθGT(1+dim(ʟθGT
        0→dim(ʟθGT1
      End
      θ+1→θ
    End:ʟθGT1
  End
  If not(dim(Ans:Then
    dim(ʟθGT)-1→dim(ʟθGT
    // Visit the vertex (Z) here
  End
End
// Insert return here
DelVar ʟθGT1DelVar ʟθGT2