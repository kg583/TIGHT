// BFST
// Template code for a breadth-first search algorithm beginning at the vertex Ans
// Tracks the predecessor of each vertex
// Returns [insert return here] in O(VE + V * [insert visit complexity here]))

{abs(iPart(real(Ans→θGT
V→dim(ʟθGT2
0→ʟθGT2(ʟθGT(1
// Establish additional structures here
While dim(ʟθGT
  ʟθGT(dim(ʟθGT
  prgmθGTVS
  If dim(Ans:Then
    Ans→θGT1
    For(θ,1,dim(ʟθGT1
      ʟθGT1(θ
      If not(ʟθGT2(Ans:Then
        augment({Ans},ʟθGT→θGT
        Z→ʟθGT2(Ans(1
      End
    End
  End
  dim(ʟθGT)-1→dim(ʟθGT
  // Visit the vertex (Z) here
End
// Insert return here
DelVar ʟθGT1DelVar ʟθGT2
