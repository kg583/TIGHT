// DIST
// Calculates the shortest distance between the vertex Ans and all other vertices
// Utilizes the Bellman-Ford algorithm, which supports negative edge weights
// Returns the an empty list if the graph contains a negative cycle and the list of distances otherwise in O(VE)

abs(real(Ans→X
V→dim(ʟθGT1
Fill(ᴇ99,ʟθGT1
0→ʟθGT1(X
For(ʟE(1),2,V
  For(θ,1,E
    ʟE(θ:prgmθGTZ
    1:If W:imag(Z
    min(Ans+real(ʟθGT1(X)),real(ʟθGT1(Y→ʟθGT1(Y
  End
End
For(θ,1,E
  ʟE(θ:prgmθGTZ
  If imag(Z)+real(ʟθGT1(X))<real(ʟθGT1(Y:Then
    ClrList ʟθGT1:E→θ
  End
End:ʟθGT1
DelVar ʟθGT1
