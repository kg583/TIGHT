// PATH
// Calculates the shortest path between the vertices Ans(1) and Ans(2)
// Utilizes Dijkstra's algorithm, and thus fails on graphs with negative edge weights
// Returns the sequence of edge indices in the path (may be empty) in O(V^2 + VE)

abs(iPart(real(Ans->thetaGT:Ans(1->X
V->dim(|LthetaGT2
Ans->dim(|LthetaGT3
Fill(|E99,|LthetaGT3
Repeat min(|LthetaGT2) or max(X={Z,|LthetaGT(2
  X:prgmthetaGTIS
  If dim(Ans:Then
    Ans->thetaGT1
    For(theta,1,dim(Ans
      |LE(|thetaGT1(theta
      prgmthetaGTO:Ans->Y
      If not(|LthetaGT3(Ans:Then
        1:If W:imag(|LthetaGT1(theta
        [i]theta+min(Ans+real(|LthetaGT3(Z)),real(|LthetaGT3(Y->|LthetaGT3(Y
      End
    End
  End
  1->|LthetaGT2(Z:|E99->Y
  For(theta,1,V
    real(|LthetaGT4(theta
    If Ans<Y and not(|LthetaGT2(theta:Then
      Ans->Y:theta->X
    End
  End
End
|LthetaGT(2->Z:imag(|LthetaGT3(Ans
prgmthetaGTP:Ans->thetaGT1
If Z!=X:ClrList |LthetaGT1
DelVar |LthetaGT1DelVar |LthetaGT2DelVar |LthetaGT3
